{"version":3,"sources":["pages/Home/styles.ts","services/api.ts","util/format.ts","hooks/useCart.tsx","pages/Home/index.tsx","pages/Cart/styles.ts","pages/Cart/index.tsx","routes.tsx","assets/images/background.svg","styles/global.ts","assets/images/logo.svg","components/Header/styles.ts","components/Header/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ProductList","styled","ul","darken","api","axios","create","baseURL","formatPrice","Intl","NumberFormat","style","currency","format","CartContext","createContext","CartProvider","children","useState","storagedCart","localStorage","getItem","JSON","parse","cart","setCart","prevCartRef","useRef","useEffect","current","cartPreviousValue","setItem","stringify","addProduct","productId","updatedCart","productExists","find","product","id","get","stock","stockAmount","data","amount","currentAmount","toast","error","newProduct","push","updateProductAmount","Error","Provider","value","removeProduct","productIndex","findIndex","splice","useCart","useContext","Home","products","setProducts","cartItemsAmount","reduce","sumAmount","newSumAmount","response","map","priceFormatted","price","loadProducts","src","image","alt","title","type","onClick","size","color","Container","div","ProductTable","table","lighten","Total","Cart","cartFormatted","subTotal","total","sumTotal","disabled","handleProductDecrement","readOnly","handleProductIncrement","Routes","path","exact","component","createGlobalStyle","background","header","Link","Header","cartSize","length","to","logo","App","basename","process","autoClose","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a627a29.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { darken } from 'polished';\n\nexport const ProductList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 20px;\n  list-style: none;\n\n  li {\n    display: flex;\n    flex-direction: column;\n    background: #fff;\n    border-radius: 4px;\n    padding: 20px;\n\n    img {\n      align-self: center;\n      max-width: 250px;\n    }\n\n    > strong {\n      font-size: 16px;\n      line-height: 20px;\n      color: #333;\n      margin-top: 5px;\n    }\n\n    > span {\n      font-size: 21px;\n      font-weight: bold;\n      margin: 5px 0 20px;\n    }\n\n    button {\n      background: #7159c1;\n      color: #fff;\n      border: 0;\n      border-radius: 4px;\n      overflow: hidden;\n      margin-top: auto;\n\n      display: flex;\n      align-items: center;\n      transition: background 0.2s;\n\n      &:hover {\n        background: ${darken(0.06, '#7159c1')};\n      }\n\n      div {\n        display: flex;\n        align-items: center;\n        padding: 12px;\n        background: rgba(0, 0, 0, 0.1);\n\n        svg {\n          margin-right: 5px;\n        }\n      }\n\n      span {\n        flex: 1;\n        text-align: center;\n        font-weight: bold;\n      }\n    }\n  }\n`;\n","import axios from 'axios';\n\nexport const api = axios.create({\n  baseURL: 'http://localhost:3333',\n});\n","export const { format: formatPrice } = new Intl.NumberFormat('pt-br', {\n  style: 'currency',\n  currency: 'BRL',\n});\n","import { createContext, ReactNode, useContext, useEffect, useRef, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { api } from '../services/api';\nimport { Product, Stock } from '../types';\n\ninterface CartProviderProps {\n  children: ReactNode;\n}\n\ninterface UpdateProductAmount {\n  productId: number;\n  amount: number;\n}\n\ninterface CartContextData {\n  cart: Product[];\n  addProduct: (productId: number) => Promise<void>;\n  removeProduct: (productId: number) => void;\n  updateProductAmount: ({ productId, amount }: UpdateProductAmount) => void;\n}\n\nconst CartContext = createContext<CartContextData>({} as CartContextData);\n\nexport function CartProvider({ children }: CartProviderProps): JSX.Element {\n  const [cart, setCart] = useState<Product[]>(() => {\n     const storagedCart = localStorage.getItem('@RocketShoes:cart');\n\n     if (storagedCart) {\n       return JSON.parse(storagedCart);\n     }\n\n    return [];\n  });\n\n  const prevCartRef = useRef<Product[]>();\n\n  useEffect(() => {\n    prevCartRef.current = cart;\n  })\n\n  const cartPreviousValue = prevCartRef.current ?? cart;\n\n  useEffect(() => {\n    if(cartPreviousValue !== cart){\n      localStorage.setItem('@RocketShoes:cart', JSON.stringify(cart));\n    }\n  }, [cart, cartPreviousValue])\n\n  const addProduct = async (productId: number) => {\n    try {\n      const updatedCart = [...cart];\n      //Verificar se o produto existe no carrinho. Caso exista, retorna o objeto referente ao produto\n      const productExists = updatedCart.find(product => product.id === productId);\n\n      const stock = await api.get(`/stock/${productId}`);\n\n      const stockAmount = stock.data.amount;\n      //Quantidade atual no carrinho\n      const currentAmount = productExists ? productExists.amount : 0;\n\n      //Quantidade no carrinho\n      const amount = currentAmount + 1;\n\n      if(amount > stockAmount){\n        toast.error('Quantidade solicitada fora de estoque');\n        return;\n      }\n\n      //Verifica se o produto existe no carrinho\n      if(productExists){\n        productExists.amount = amount;\n      } else{\n        const product = await api.get(`/products/${productId}`);\n\n        const newProduct = {\n          ...product.data,\n          amount: 1\n        }\n\n        updatedCart.push(newProduct);\n      }\n\n      setCart(updatedCart);\n    } catch {\n      toast.error('Erro na adição do produto');\n    }\n  };\n\n  const removeProduct = (productId: number) => {\n    try {\n      const updatedCart = [...cart];\n      const productIndex = updatedCart.findIndex(product => product.id === productId);\n\n      if(productIndex >= 0){\n        updatedCart.splice(productIndex, 1);\n        setCart(updatedCart)\n      }else{\n        throw Error();\n      }\n    } catch {\n      toast.error('Erro na remoção do produto');\n    }\n  };\n\n  const updateProductAmount = async ({\n    productId,\n    amount,\n  }: UpdateProductAmount) => {\n    try {\n      if(amount <= 0){\n        return;\n      }\n\n     const stock = await api.get(`/stock/${productId}`);\n\n     const stockAmount = stock.data.amount;\n\n     if(amount > stockAmount){\n      toast.error('Quantidade solicitada fora de estoque');\n      return;\n     }\n\n     const updatedCart = [...cart];\n     const productExists = updatedCart.find(product => product.id === productId);\n\n     if(productExists){\n      productExists.amount = amount;\n      setCart(updatedCart);\n     }else{\n      throw Error();\n     }\n    } catch {\n      toast.error('Erro na alteração de quantidade do produto');\n    }\n  };\n\n  return (\n    <CartContext.Provider\n      value={{ cart, addProduct, removeProduct, updateProductAmount }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n}\n\nexport function useCart(): CartContextData {\n  const context = useContext(CartContext);\n\n  return context;\n}\n","import React, { useState, useEffect } from 'react';\nimport { MdAddShoppingCart } from 'react-icons/md';\n\nimport { ProductList } from './styles';\nimport { api } from '../../services/api';\nimport { formatPrice } from '../../util/format';\nimport { useCart } from '../../hooks/useCart';\n\ninterface Product {\n  id: number;\n  title: string;\n  price: number;\n  image: string;\n}\n\ninterface ProductFormatted extends Product {\n  priceFormatted: string;\n}\n\ninterface CartItemsAmount {\n  [key: number]: number;\n}\n\nconst Home = (): JSX.Element => {\n   const [products, setProducts] = useState<ProductFormatted[]>([]);\n   const { addProduct, cart } = useCart();\n\n   const cartItemsAmount = cart.reduce((sumAmount, product) => {\n      const newSumAmount = {... sumAmount};\n  //Os [] não são um vetor. Apenas cria a propriedade id dentro de product\n      newSumAmount[product.id] = product.amount;\n\n      return newSumAmount;\n   }, {} as CartItemsAmount)\n\n  useEffect(() => {\n    async function loadProducts() {\n       const response = await api.get<Product[]>('products');\n\n       const data = response.data.map(product => ({\n        ...product,\n        priceFormatted: formatPrice(product.price)\n       }))\n       setProducts(data);\n    }\n    loadProducts();\n  }, []);\n\n  function handleAddProduct(id: number) {\n     addProduct(id);\n  }\n\n  return (\n    <ProductList>\n      {products.map(product => (\n        <li key={product.id}>\n        <img src={product.image} alt={product.title} />\n        <strong>{product.title}</strong>\n        <span>{product.priceFormatted}</span>\n        <button\n          type=\"button\"\n          data-testid=\"add-product-button\"\n          onClick={() => handleAddProduct(product.id)}\n        >\n          <div data-testid=\"cart-product-quantity\">\n            <MdAddShoppingCart size={16} color=\"#FFF\" />\n             {cartItemsAmount[product.id] || 0}\n          </div>\n\n          <span>ADICIONAR AO CARRINHO</span>\n        </button>\n      </li>\n      ))}\n    </ProductList>\n  );\n};\n\nexport default Home;\n","import styled from 'styled-components';\nimport { darken, lighten } from 'polished';\n\nexport const Container = styled.div`\n  padding: 30px;\n  background: #fff;\n  border-radius: 4px;\n\n  footer {\n    margin-top: 30px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    button {\n      background: #7159c1;\n      color: #fff;\n      border: 0;\n      border-radius: 4px;\n      padding: 12px 20px;\n      font-weight: bold;\n      text-transform: uppercase;\n      transition: background 0.2s;\n\n      &:hover {\n        background: ${darken(0.06, '#7159c1')};\n      }\n    }\n  }\n`;\n\nexport const ProductTable = styled.table`\n  width: 100%;\n\n  thead th {\n    color: #999;\n    text-align: left;\n    padding: 12px;\n  }\n\n  tbody td {\n    padding: 12px;\n    border-bottom: 1px solid #eee;\n  }\n\n  img {\n    height: 100px;\n  }\n\n  strong {\n    color: #333;\n    display: block;\n  }\n\n  span {\n    display: block;\n    margin-top: 5px;\n    font-size: 18px;\n    font-weight: bold;\n  }\n\n  div {\n    display: flex;\n    align-items: center;\n\n    input {\n      border: 1px solid #ddd;\n      border-radius: 4px;\n      color: #666;\n      padding: 6px;\n      width: 50px;\n    }\n  }\n\n  button {\n    background: none;\n    border: 0;\n    padding: 6px;\n\n    svg {\n      color: #7159c1;\n      transition: color 0.2s;\n    }\n\n    &:hover {\n      svg {\n        color: ${darken(0.06, '#7159c1')};\n      }\n    }\n\n    &:disabled {\n      svg {\n        color: ${lighten(0.25, '#7159c1')};\n        cursor: not-allowed;\n      }\n    }\n  }\n`;\n\nexport const Total = styled.div`\n  display: flex;\n  align-items: baseline;\n\n  span {\n    color: #999;\n    font-weight: bold;\n  }\n\n  strong {\n    font-size: 28px;\n    margin-left: 5px;\n  }\n`;\n","import React from 'react';\nimport {\n  MdDelete,\n  MdAddCircleOutline,\n  MdRemoveCircleOutline,\n} from 'react-icons/md';\n\n\nimport { useCart } from '../../hooks/useCart';\nimport { formatPrice } from '../../util/format';\nimport { Container, ProductTable, Total } from './styles';\n\ninterface Product {\n  id: number;\n  title: string;\n  price: number;\n  image: string;\n  amount: number;\n}\n\nconst Cart = (): JSX.Element => {\n   const { cart, removeProduct, updateProductAmount } = useCart();\n\n   const cartFormatted = cart.map(product => ({\n        ...product,\n        priceFormatted: formatPrice(product.price),\n        subTotal: formatPrice(product.price * product.amount)\n   }))\n   const total =\n     formatPrice(\n       cart.reduce((sumTotal, product) => {\n          return sumTotal + product.price * product.amount\n       }, 0)\n     )\n\n  function handleProductIncrement(product: Product) {\n     updateProductAmount({ productId: product.id, amount: product.amount + 1})\n  }\n\n  function handleProductDecrement(product: Product) {\n    updateProductAmount({ productId: product.id, amount: product.amount - 1})\n  }\n\n  function handleRemoveProduct(productId: number) {\n     removeProduct(productId)\n  }\n\n  return (\n    <Container>\n      <ProductTable>\n        <thead>\n          <tr>\n            <th aria-label=\"product image\" />\n            <th>PRODUTO</th>\n            <th>QTD</th>\n            <th>SUBTOTAL</th>\n            <th aria-label=\"delete icon\" />\n          </tr>\n        </thead>\n        <tbody>\n          {cartFormatted.map(product => (\n            <tr key={product.id} data-testid=\"product\">\n            <td>\n              <img src={product.image} alt={product.title} />\n            </td>\n            <td>\n              <strong>{product.title}</strong>\n              <span>{product.priceFormatted}</span>\n            </td>\n            <td>\n              <div>\n                <button\n                  type=\"button\"\n                  data-testid=\"decrement-product\"\n                  disabled={product.amount <= 1}\n                  onClick={() => handleProductDecrement(product)}\n                >\n                  <MdRemoveCircleOutline size={20} />\n                </button>\n                <input\n                  type=\"text\"\n                  data-testid=\"product-amount\"\n                  readOnly\n                  value={product.amount}\n                />\n                <button\n                  type=\"button\"\n                  data-testid=\"increment-product\"\n                  onClick={() => handleProductIncrement(product)}\n                >\n                  <MdAddCircleOutline size={20} />\n                </button>\n              </div>\n            </td>\n            <td>\n              <strong>{product.subTotal}</strong>\n            </td>\n            <td>\n              <button\n                type=\"button\"\n                data-testid=\"remove-product\"\n                onClick={() => handleRemoveProduct(product.id)}\n              >\n                <MdDelete size={20} />\n              </button>\n            </td>\n          </tr>\n          ))}\n        </tbody>\n      </ProductTable>\n\n      <footer>\n        <button type=\"button\">Finalizar pedido</button>\n\n        <Total>\n          <span>TOTAL</span>\n          <strong>{total}</strong>\n        </Total>\n      </footer>\n    </Container>\n  );\n};\n\nexport default Cart;\n","import { Switch, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Cart from './pages/Cart';\n\nconst Routes = (): JSX.Element => {\n  return (\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/cart\" component={Cart} />\n    </Switch>\n  );\n};\n\nexport default Routes;\n","export default __webpack_public_path__ + \"static/media/background.d1721c83.svg\";","import { createGlobalStyle } from 'styled-components';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport background from '../assets/images/background.svg';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    background: #191920 url(${background}) no-repeat center top;\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body, input, button {\n    font: 14px Roboto, sans-serif;\n  }\n\n  #root {\n    max-width: 1020px;\n    margin: 0 auto;\n    padding: 0 20px 50px;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/logo.eb50c339.svg\";","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 50px 0;\n\n  a {\n    transition: opacity 0.2s;\n\n    &:hover {\n      opacity: 0.7;\n    }\n  }\n`;\n\nexport const Cart = styled(Link)`\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n\n  div {\n    text-align: right;\n    margin-right: 10px;\n\n    strong {\n      display: block;\n      color: #fff;\n    }\n\n    span {\n      font-size: 12px;\n      color: #999;\n    }\n  }\n`;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { MdShoppingBasket } from 'react-icons/md';\n\nimport logo from '../../assets/images/logo.svg';\nimport { Container, Cart } from './styles';\nimport { useCart } from '../../hooks/useCart';\n\nconst Header = (): JSX.Element => {\n   const { cart } = useCart();\n   //Verifica quantos itens distintos estão no carinho\n   const cartSize = cart.length;\n\n  return (\n    <Container>\n      <Link to=\"/\">\n        <img src={logo} alt=\"Rocketshoes\" />\n      </Link>\n\n      <Cart to=\"/cart\">\n        <div>\n          <strong>Meu carrinho</strong>\n          <span data-testid=\"cart-size\">\n            { cartSize === 1 ? `${cartSize} item` : `${cartSize} itens` }\n          </span>\n        </div>\n        <MdShoppingBasket size={36} color=\"#FFF\" />\n      </Cart>\n    </Container>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\n\nimport Routes from './routes';\nimport GlobalStyles from './styles/global';\nimport Header from './components/Header';\nimport { CartProvider } from './hooks/useCart';\n\nconst App = (): JSX.Element => {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <CartProvider>\n        <GlobalStyles />\n        <Header />\n        <Routes />\n        <ToastContainer autoClose={3000} />\n      </CartProvider>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}